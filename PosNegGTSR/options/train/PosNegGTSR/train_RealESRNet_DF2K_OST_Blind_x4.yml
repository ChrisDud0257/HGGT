# Train PSNR-oriented Real-ESRNet on DF2K_OST dataset with blind degradation settings
name: RealESRNet_DF2K_OST_Blind_x4
model_type: RealESRNet_Model
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

pre_pad: 0
tile_size: 800
tile_pad: 32
tile_process: False

# ----------------- options for synthesizing training data----------------- #
gt_usm: True  # USM the ground-truth

# the first degradation process
resize_prob: [0.1, 0.85, 0.05]  # up, down, keep
resize_range: [0.9, 1.1]
gaussian_noise_prob: 0.5
noise_range: [1, 8]
poisson_scale_range: [0.05, 0.5]
gray_noise_prob: 0.2
jpeg_range: [85, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.1, 0.85, 0.05]  # up, down, keep
resize_range2: [0.9, 1.1]
gaussian_noise_prob2: 0.5
noise_range2: [0, 4]
poisson_scale_range2: [0, 0.3]
gray_noise_prob2: 0.2
jpeg_range2: [87, 95]

gt_size: 256
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: DF2K_OST
    type: TwoStageDegradation_DF2K_Dataset
    dataroot_all_gt: /home/chendu/data2_hdd10t/chendu/dataset/DF2K_OST/subimages_512 #path to DF2K_OST training dataset or your own training dataset

    blur_kernel_size_min: 1
    blur_kernel_size_max: 3
    kernel_list: ['iso', 'aniso']
    kernel_prob: [0.7, 0.3]
    sinc_prob: 0.01
    blur_sigma: [0.1, 0.6]
    betag_range: [0.1, 2.0]
    betap_range: [0.1, 1.0]

    blur_kernel_size_min2: 1
    blur_kernel_size_max2: 2
    kernel_list2: ['iso', 'aniso']
    kernel_prob2: [0.7, 0.3]
    sinc_prob2: 0.01
    blur_sigma2: [0.1, 0.4]
    betag_range2: [0.1, 2.0]
    betap_range2: [0.1, 1.0]

    final_sinc_prob: 0.1

    gt_size: 256
    use_hflip: True
    use_rot: False

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Test/GT/Set5 #path to your own testing dataset, we also provide our validation GT dataset in "datasets/Test/GT/Set5"
    dataroot_lq: datasets/Test/Blind_Degradation_Benchmark_LQ/Set5 #path to your own testing dataset, we also provide our validation LQ dataset in "datasets/Test/Blind_Degradation_Benchmark_LQ/Set5"
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

#The pretrained model is provided by the ESRGAN paper. https://github.com/XPixelGroup/BasicSR/blob/master/docs/ModelZoo.md
path:
  pretrain_network_g: experiments/pretrained_models/Real-ESRGAN/Bicubic_PSNR/ESRGAN_PSNR_SRx4_DF2K_official-150ff491.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [300000]
    gamma: 0.5

  total_iter: 300000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
# validation settings
val:
 val_freq: !!float 5e4
 save_img: True

 metrics:
   psnr: # metric name
     type: calculate_psnr
     crop_border: 4
     test_y_channel: false
   ssim: # metric name
     type: calculate_ssim
     crop_border: 4
     test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
